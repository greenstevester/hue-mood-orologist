spring.application.name=hue-mood-orologist

# ====================================================================================
# WEATHER API CONFIGURATION
# ====================================================================================
# Open-Meteo API base URL (free weather API)
weather.api.url=https://api.open-meteo.com/v1/forecast

# Temperature threshold (Â°C) - below this is considered "cold weather"
# Examples: 0.0 (freezing), 5.0 (chilly), 10.0 (cool), 15.0 (mild)
weather.cold.threshold=5.0

# Rain probability threshold (%) - above this triggers "rainy weather" mode
# Examples: 20 (sensitive), 30 (balanced), 50 (conservative)
weather.rain.probability.threshold=30

# Rain amount threshold (mm) - above this triggers "rainy weather" mode
# Examples: 0.1 (light drizzle), 0.5 (light rain), 1.0 (moderate rain)
weather.rain.amount.threshold=0.1

# ====================================================================================
# PHILIPS HUE BRIDGE CONFIGURATION
# ====================================================================================
# Bridge IP address (leave empty for auto-discovery)
# Example: 192.168.1.100, 10.0.0.101
hue.bridge-ip=

# API key for Hue bridge authentication (REQUIRED)
# To get API key: Press bridge button, then run application and follow instructions
# Example: YOUR_API_KEY_HERE
hue.api-key=

# Application name registered with the bridge
hue.app-name=HueMoodOrologist

# Enable automatic bridge discovery on network
hue.auto-discover-bridge=true

# Timeout for bridge discovery (seconds)
hue.discovery-timeout=10

# ====================================================================================
# LIGHT TARGETING CONFIGURATION
# ====================================================================================
# Control all lights (true) or target specific light (false)
hue.target-all-lights=true

# Name of specific light to control (case-insensitive)
# Only used when target-all-lights=false
# Examples: "Kitchen", "Living Room", "Bedroom", "Office Desk"
hue.target-light-name=

# ====================================================================================
# SCHEDULE CONFIGURATION
# ====================================================================================
# How often to check weather and update lights
# MINUTE      - Every minute (good for testing)
# HOUR        - Every hour (recommended for daily use)
# FOUR_HOURS  - Every 4 hours (conservative usage)
# TWELVE_HOURS - Every 12 hours (minimal usage)
schedule.interval=HOUR

# Initial delay before first weather check (seconds)
# Allows time for application startup and bridge connection
schedule.initial-delay-seconds=5

# ====================================================================================
# COLOR MAPPING CONFIGURATION
# ====================================================================================
# Enable weather-to-color mapping (true) or use legacy rain/cold logic (false)
color-mapping.enabled=true

# Default color when weather condition is not mapped
# Can be color name, hex (#RRGGBB), or RGB (r,g,b)
color-mapping.default-color=white

# Weather condition to color mappings
# Supported conditions: rain, showers, snow, sunshine, overcast, cold, clear
# Color formats: Named colors, hex colors (#RRGGBB), RGB values (r,g,b)
#
# Examples of weather-to-color mappings:
color-mapping.conditions.rain=light purple
color-mapping.conditions.showers=dark purple
color-mapping.conditions.sunshine=yellow
color-mapping.conditions.overcast=grey
color-mapping.conditions.snow=white
color-mapping.conditions.cold=warm yellow
color-mapping.conditions.clear=cool white

# Additional color examples (uncomment to use):
# color-mapping.conditions.rain=100,149,237
# color-mapping.conditions.showers=#4B0082
# color-mapping.conditions.sunshine=sunshine yellow
# color-mapping.conditions.overcast=storm grey
# color-mapping.conditions.snow=snow white

# ====================================================================================
# LOGGING CONFIGURATION
# ====================================================================================
# Set logging level for this application
# DEBUG - Verbose logging for troubleshooting
# INFO  - Standard operational logging
# WARN  - Only warnings and errors
logging.level.io.github.greenstevester.hue_mood_orologist=INFO
